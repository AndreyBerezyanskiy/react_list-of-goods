{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","isAlphabet","isLength","goodsForRender","goods","visibleGoods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,kBACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,kBACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,kBACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,kBACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAAaV,IAAaL,EAASS,SACnCO,EAAWX,IAAaL,EAASW,OACjCM,EApEH,SACLC,EADK,GAGJ,IADCb,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNe,EAAY,YAAOD,GAEzB,OAAQb,GACN,KAAKL,EAASS,SACZU,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAME,cAAcD,MAEtB,MAEF,KAAKtB,EAASW,OACZQ,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMG,OAASF,EAAME,UAIzB,KAAKxB,EAASM,MAShB,OAJIF,GACFe,EAAaP,UAGRO,EAuCkBM,CACrBxB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,kBAAmB,CAAE,YAAab,IAChDc,QAASf,KAAKP,eAHhB,iCAQA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaZ,IAClDa,QAASf,KAAKJ,aAHhB,4BAQA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaxB,IAClDyB,QAASf,KAAKF,QAHhB,sBAQER,GAAcC,IAAaL,EAASM,OACpC,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACE,6BACGI,EAAea,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA7EtC,GAAyBC,aChEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.436db4cb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (\n        good1.length - good2.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => (\n    this.setState({ sortType: SortType.ALPHABET })\n  );\n\n  sortByLength = () => (\n    this.setState({ sortType: SortType.LENGTH })\n  );\n\n  reverse = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  );\n\n  reset = () => (\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    })\n  );\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isAlphabet = sortType === SortType.ALPHABET;\n    const isLength = sortType === SortType.LENGTH;\n    const goodsForRender = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info ', { 'is-light': !isAlphabet })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', { 'is-light': !isLength })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsForRender.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}